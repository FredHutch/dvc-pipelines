
manifest {
    name = 'FredHutch/dvc-pipelines'
    description = 'A repository of pipelines for single-cell data in Nextflow DSL2 based on VSN Pipelines'
    homePage = 'https://github.com/vib-singlecell-nf/vsn-pipelines'
    version = '0.21.0'
    mainScript = 'main.nf'
    defaultBranch = 'master'
    nextflowVersion = '!20.07.1' // with ! prefix, stop execution if current version does not match required version.
}

params {
}

// load these configs first:
includeConfig 'lib/config/global.config'
includeConfig 'lib/config/compute_resources.config'
includeConfig 'lib/config/test_disabled.config'
includeConfig 'lib/utils/utils.config' // utilities config


profiles {

    standard {
        process.executor = 'local'
    }
    qsub {
        process.executor = 'pbs'
    }
    docker {
        includeConfig 'lib/config/docker.config'
    }
    singularity {
        includeConfig 'lib/config/singularity.config'
    }
    vpcx {
        includeConfig 'lib/config/vpcx.config'
    }
    min {
        includeConfig 'lib/config/min.config'
    }
    test {
        includeConfig 'lib/config/test.config'
    }

    // workflow-specific profiles:

    star {
        includeConfig 'lib/modules/star/star.config'
    }
    scanpy {
        includeConfig 'lib/modules/scanpy/scanpy.config'
    }
    bbknn {
        if(min && min.enabled) {
            includeConfig 'lib/modules/scanpy/conf/min.config'
            includeConfig 'lib/modules/scanpy/conf/bbknn.config'
        } else {
            includeConfig 'lib/utils/conf/h5ad_concatenate.config'
            includeConfig 'lib/modules/scanpy/scanpy.config'
            includeConfig 'lib/modules/scanpy/conf/bbknn.config'
        }
        includeConfig 'lib/utils/conf/scope.config'
    }
    mnncorrect {
        if(min && min.enabled) {
            includeConfig 'lib/modules/scanpy/conf/min.config'
            includeConfig 'lib/modules/scanpy/conf/mnncorrect.config'
        } else {
            includeConfig 'lib/utils/conf/h5ad_concatenate.config'
            includeConfig 'lib/modules/scanpy/scanpy.config'
            includeConfig 'lib/modules/scanpy/conf/mnncorrect.config'
        }
        includeConfig 'lib/utils/conf/scope.config'
    }
    popscle {
        includeConfig 'lib/modules/popscle/popscle.config'
    }
    harmony {
        if(min && min.enabled) {
            includeConfig 'lib/modules/scanpy/conf/min.config'
            includeConfig 'lib/modules/harmony/harmony.config'
        } else {
            includeConfig 'lib/utils/conf/h5ad_concatenate.config'
            includeConfig 'lib/modules/scanpy/scanpy.config'
            includeConfig 'lib/modules/harmony/harmony.config'
        }
        includeConfig 'lib/utils/conf/scope.config'
    }
    harmony_only {
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/modules/harmony/harmony.config'
        includeConfig 'lib/utils/conf/scope.config'
    }
    bbknn_scenic {
        includeConfig 'lib/utils/conf/h5ad_concatenate.config'
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/modules/scanpy/conf/bbknn.config'
        includeConfig 'lib/modules/scenic/scenic.config'
        includeConfig 'lib/utils/conf/scope.config'
    }
    bbknn_scenic_multiruns {
        includeConfig 'lib/utils/conf/h5ad_concatenate.config'
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/modules/scanpy/conf/bbknn.config'
        includeConfig 'lib/modules/scenic/scenic.config'
        includeConfig 'lib/modules/scenic/conf/multi_runs.config'
        includeConfig 'lib/utils/conf/scope.config'
    }
    single_sample {
        if(min && min.enabled) {
            includeConfig 'lib/modules/scanpy/conf/min.config'
        } else {
            includeConfig 'lib/modules/scanpy/scanpy.config'
        }
        includeConfig 'lib/utils/conf/scope.config'
    }
    multi_sample {
        includeConfig 'lib/utils/conf/h5ad_concatenate.config'
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/utils/conf/scope.config'
    }
    single_sample_scenic {
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/modules/scenic/scenic.config'
        includeConfig 'lib/utils/conf/scope.config'
    }
    single_sample_scrublet {
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/modules/scrublet/scrublet.config'
        includeConfig 'lib/utils/conf/scope.config'
    }
    single_sample_decontx_correct {
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/utils/conf/scope.config'
        includeConfig 'lib/modules/celda/celda.config'
        includeConfig 'lib/modules/celda/conf/decontx_correct.config'
    }
    single_sample_decontx_filter_scrublet {
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/modules/scrublet/scrublet.config'
        includeConfig 'lib/utils/conf/scope.config'
        includeConfig 'lib/modules/celda/celda.config'
        includeConfig 'lib/modules/celda/conf/decontx_filter.config'
    }
    single_sample_decontx_correct_scrublet {
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/modules/scrublet/scrublet.config'
        includeConfig 'lib/utils/conf/scope.config'
        includeConfig 'lib/modules/celda/celda.config'
        includeConfig 'lib/modules/celda/conf/decontx_correct.config'
    }
    single_sample_soupx_correct_scrublet {
        includeConfig 'lib/modules/scanpy/scanpy.config'
        includeConfig 'lib/modules/scrublet/scrublet.config'
        includeConfig 'lib/utils/conf/scope.config'
        includeConfig 'lib/modules/soupx/soupx.config'
        includeConfig 'lib/modules/soupx/conf/soupx_correct.config'
    }
    scenic {
        includeConfig 'lib/modules/scenic/scenic.config'
        includeConfig 'lib/utils/conf/scope.config'
    }
    scenic_append_only {
        includeConfig 'lib/modules/scenic/conf/append.config'
    }
    scenic_multiruns {
        includeConfig 'lib/modules/scenic/scenic.config'
        includeConfig 'lib/modules/scenic/conf/multi_runs.config'
        includeConfig 'lib/utils/conf/scope.config'
    }
    single_sample_star {
        includeConfig 'lib/modules/star/star.config'
        includeConfig 'lib/modules/scanpy/scanpy.config'
    }
    nemesh {
        includeConfig 'lib/config/nemesh.config'
        includeConfig 'lib/modules/fastp/fastp.config'
        includeConfig 'lib/modules/picard/picard.config'
        includeConfig 'lib/modules/dropseqtools/dropseqtools.config'
        includeConfig 'lib/modules/star/star.config'
        includeConfig 'lib/modules/dropletutils/dropletutils.config'
    }

    // scanpy profiles:

    scanpy_filter {
        includeConfig 'lib/modules/scanpy/conf/filter.config'
    }
    scanpy_data_transformation {
        includeConfig 'lib/modules/scanpy/conf/data_transformation.config'
    }
    scanpy_normalization {
        includeConfig 'lib/modules/scanpy/conf/normalization.config'
    }
    scanpy_regress_out {
        includeConfig 'lib/modules/scanpy/conf/regress_out.config'
    }
    
    // cellranger profiles:

    cellranger {
        includeConfig 'lib/modules/cellranger/cellranger.config'
    }
    cellranger_libraries {
        includeConfig 'lib/modules/cellranger/cellranger.config'
        includeConfig 'lib/modules/cellranger/conf/cellranger_libraries.config'
    }
    cellranger_count {
        includeConfig 'lib/modules/cellranger/conf/base.config'
        includeConfig 'lib/modules/cellranger/conf/count.config'
    }    
    cellranger_count_libraries {
        includeConfig 'lib/modules/cellranger/conf/base.config'
        includeConfig 'lib/modules/cellranger/conf/count.config'
        includeConfig 'lib/modules/cellranger/conf/count_libraries.config'
    }
    cellranger_count_metadata {
        includeConfig 'lib/modules/cellranger/conf/base.config'
        includeConfig 'lib/modules/cellranger/conf/count.config'
        includeConfig 'lib/modules/cellranger/conf/count_metadata.config'
    }

    // scrublet profiles

    scrublet {
        includeConfig 'lib/modules/scrublet/scrublet.config'
    }
    
    // celda profiles:

    decontx {
        includeConfig 'lib/modules/celda/celda.config'
        includeConfig 'lib/modules/celda/conf/decontx_filter.config'
    }

    // soupx profiles 

    soupx {
        includeConfig 'lib/modules/soupx/soupx.config'
        includeConfig 'lib/modules/soupx/conf/soupx_correct.config'
    }

    // directs profiles:

    directs {
        includeConfig 'lib/modules/directs/directs.config'
    }

    // scope profiles: 

    scope {
        includeConfig 'lib/utils/conf/scope.config'
    }

    // data profiles:

    tenx {
        includeConfig 'lib/channels/conf/tenx_cellranger_mex.config'
    }
    tenx_atac {
        includeConfig 'lib/channels/conf/tenx_atac_cellranger_mex.config'
    }
    tenx_h5 {
        includeConfig 'lib/channels/conf/tenx_cellranger_h5.config'
    }
    h5ad {
        includeConfig 'lib/channels/conf/h5ad.config'
    }
    loom {
        includeConfig 'lib/channels/conf/loom.config'
    }
    tsv {
        includeConfig 'lib/channels/conf/tsv.config'
    }
    csv {
        includeConfig 'lib/channels/conf/csv.config'
    }
    sra {
        includeConfig 'lib/channels/conf/sra.config'
        includeConfig 'lib/utils/conf/sra_metadata.config'
        includeConfig 'lib/modules/sratoolkit/sratoolkit.config'
    }
    seurat_rds {
        includeConfig 'lib/channels/conf/seurat_rds.config'
    }

    // metadata profiles:

    dm6 {
        includeConfig 'lib/modules/scenic/conf/min/tfs/fly-v0.0.1.config'
        includeConfig 'lib/config/genomes/dm6.config'
    }

    hg38 {
        includeConfig 'lib/modules/scenic/conf/min/tfs/human-v0.0.1.config'
        includeConfig 'lib/config/genomes/hg38.config'
    }

    hg19 {
        includeConfig 'lib/modules/scenic/conf/min/tfs/human-v0.0.1.config'
        includeConfig 'lib/config/genomes/hg19.config'
    }

    mm10 {
        includeConfig 'lib/modules/scenic/conf/min/tfs/mouse-v0.0.1.config'
        includeConfig 'lib/config/genomes/mm10.config'
    }

    // feature profiles:

    pcacv {
        includeConfig 'lib/modules/pcacv/pcacv.config'
    }

    // scenic profiles:

    scenic_use_cistarget_motifs {
        includeConfig "lib/scenic/conf/min/dbs/cistarget-motifs-${params.global.species}-${params.global.genome.assembly}-v0.0.1.config"
    }

    scenic_use_cistarget_tracks {
        includeConfig "lib/scenic/conf/min/dbs/cistarget-tracks-${params.global.species}-${params.global.genome.assembly}-v0.0.1.config"
    }

    scenic_test {
        includeConfig 'lib/modules/scenic/conf/test.config'
    }

    // utility profiles:

    cell_filter_annotate_and_sample_annotate {
        includeConfig 'lib/utils/conf/cell_filter.config'
        includeConfig 'lib/utils/conf/cell_annotate.config'
        includeConfig 'lib/utils/conf/sample_annotate.config'
        includeConfig 'lib/utils/conf/h5ad_clean.config'
    }

    utils_sample_annotate {
        includeConfig 'lib/utils/conf/sample_annotate.config'
    }
    utils_cell_annotate {
        includeConfig 'lib/utils/conf/cell_annotate.config'
    }
    utils_cell_filter {
        includeConfig 'lib/utils/conf/cell_filter.config'
    }

    // cluster submission retry profile:
    cluster_retry {
        includeConfig 'lib/config/compute_resources_with_retry.config'
    }

    // logger profiles
    log {
        includeConfig 'lib/config/logger.config'
    }

    // test profiles:

    test__single_sample {
        includeConfig 'lib/config/test__single_sample.config'
    }
    test__single_sample_scenic {
        includeConfig 'lib/config/genomes/hg38.config'
        includeConfig 'lib/config/test__single_sample_scenic.config'
    }
    test__single_sample_scrublet {
        includeConfig 'lib/config/test__single_sample_scrublet.config'
    }
    test__scenic {
        includeConfig 'lib/config/genomes/hg38.config'
        includeConfig 'lib/config/test__scenic.config'
    }
    test__scenic_multiruns {
        includeConfig 'lib/config/genomes/hg38.config'
        includeConfig 'lib/config/test__scenic_multiruns.config'
    }
    test__single_sample_scenic_multiruns {
        includeConfig 'lib/config/genomes/hg38.config'
        includeConfig 'lib/config/test__single_sample_scenic_multiruns.config'
    }
    test__bbknn {
        includeConfig 'lib/utils/conf/h5ad_concatenate.config'
        includeConfig 'lib/config/test__bbknn.config'
    }
    test__bbknn_scenic {
        includeConfig 'lib/config/genomes/hg38.config'
        includeConfig 'lib/utils/conf/h5ad_concatenate.config'
        includeConfig 'lib/config/test__bbknn_scenic.config'
    }
    test__harmony {
        includeConfig 'lib/utils/conf/h5ad_concatenate.config'
        includeConfig 'lib/config/test__harmony.config'
    }
    test__mnncorrect {
        includeConfig 'lib/utils/conf/h5ad_concatenate.config'
        includeConfig 'lib/config/test__mnncorrect.config'
    }
    test__decontx {
        includeConfig 'lib/config/test__decontx.config'
    }

    test__single_sample_decontx_correct {
        includeConfig 'lib/config/test__single_sample.config'
        includeConfig 'lib/config/test__single_sample_decontx_correct.config'
    }

    test__single_sample_decontx_correct_scrublet {
        includeConfig 'lib/config/test__single_sample_scrublet.config'
        includeConfig 'lib/config/test__single_sample_decontx_correct_scrublet.config'
    }


    /*
        *** ATAC-seq profiles ***
    */

    cellranger_atac {
        includeConfig 'lib/modules/cellranger-atac/cellranger-atac.config'
    }
    cellranger_atac_count {
        includeConfig 'lib/modules/cellranger-atac/conf/base.config'
        includeConfig 'lib/modules/cellranger-atac/conf/count.config'
    }
    cellranger_atac_count_metadata {
        includeConfig 'lib/modules/cellranger-atac/conf/base.config'
        includeConfig 'lib/modules/cellranger-atac/conf/count.config'
        includeConfig 'lib/modules/cellranger-atac/conf/count_metadata.config'
    }
    cistopic {
        includeConfig 'lib/modules/cistopic/cistopic.config'
    }


    /*
        *** the following profiles should be loaded last ***
    */
    test__compute_resources {
        // must be used with GitHub Actions tests to limit compute resources
        includeConfig 'lib/config/test__compute_resources.config'
    }

}


timeline {
    enabled = true
    file = "${params.global.outdir}/nextflow_reports/execution_timeline.html"
}
report {
    enabled = true
    file = "${params.global.outdir}/nextflow_reports/execution_report.html"
}
trace {
    enabled = true
    file = "${params.global.outdir}/nextflow_reports/execution_trace.txt"
}
dag {
    enabled = true
    file = "${params.global.outdir}/nextflow_reports/pipeline_dag.svg"
}
min {
    enabled = false
}

