manifest {
   name = 'FredHutch/dvc-pipelines'
   description = 'A repository of pipelines for single-cell data in Nextflow DSL2 based on VSN Pipelines'
   homePage = 'https://github.com/vib-singlecell-nf/vsn-pipelines'
   version = '0.21.0'
   mainScript = 'main.nf'
   defaultBranch = 'master'
   nextflowVersion = '!20.07.1'
}

params {
   global {
      project_name = '10x_PBMC'
      outdir = 'out'
   }
   misc {
      test {
         enabled = false
      }
   }
   utils {
      container = 'vibsinglecellnf/utils:0.3.0'
      publish {
         compressionLevel = 6
      }
   }
   sc {
      file_converter {
         off = 'h5ad'
         tagCellWithSampleId = true
         useFilteredMatrix = true
         makeVarIndexUnique = true
         iff = 'h5ad'
      }
      scanpy {
         container = 'zager/scanpy:latest'
         report {
            annotations_to_plot = []
         }
         feature_selection {
            report_ipynb = '/src/scanpy/bin/reports/sc_select_variable_genes_report.ipynb'
            method = 'mean_disp_plot'
            minMean = 0.0125
            maxMean = 3
            minDisp = 0.5
            off = 'h5ad'
         }
         feature_scaling {
            method = 'zscore_scale'
            maxSD = 10
            off = 'h5ad'
         }
         neighborhood_graph {
            nPcs = 50
            off = 'h5ad'
         }
         dim_reduction {
            report_ipynb = '/src/scanpy/bin/reports/sc_dim_reduction_report.ipynb'
            pca {
               method = 'pca'
               nComps = 50
               off = 'h5ad'
            }
            umap {
               method = 'umap'
               off = 'h5ad'
            }
            tsne {
               method = 'tsne'
               off = 'h5ad'
            }
         }
         clustering {
            report_ipynb = '/src/scanpy/bin/reports/sc_clustering_report.ipynb'
            method = 'louvain'
            resolution = 0.8
            off = 'h5ad'
         }
         marker_genes {
            method = 'wilcoxon'
            ngenes = 0
            groupby = 'louvain'
            off = 'h5ad'
         }
         filter {
            report_ipynb = '/src/scanpy/bin/reports/sc_filter_qc_report.ipynb'
            cellFilterMinNGenes = 200
            cellFilterMaxNGenes = 4000
            cellFilterMaxPercentMito = 0.15
            geneFilterMinNCells = 3
            off = 'h5ad'
            outdir = 'out'
         }
         data_transformation {
            method = 'log1p'
            off = 'h5ad'
         }
         normalization {
            method = 'cpx'
            countsPerCellAfter = 10000
            off = 'h5ad'
         }
      }
   }
   data {
      h5ad {
         file_paths = 'data/test.h5ad'
         suffix = '.h5ad'
      }
   }
}

process {
   executor = 'local'
   withLabel:'compute_resources__.*|compute_resources__default' {
      cpus = 2
      memory = '32 GB'
      time = '1h'
      clusterOptions = '-A cluster_account'
   }
   withLabel:compute_resources__minimal {
      cpus = 1
      memory = '32 GB'
   }
   withLabel:compute_resources__mem {
      cpus = 4
      memory = '32 GB'
   }
   withLabel:compute_resources__cpu {
      cpus = 16
      memory = '32 GB'
   }
   withLabel:compute_resources__report {
      maxForks = 2
      cpus = 1
      memory = '32 GB'
   }
   withLabel:compute_resources__24hqueue {
      time = '24h'
   }
}

timeline {
   enabled = true
   file = 'out/nextflow_reports/execution_timeline.html'
}

report {
   enabled = true
   file = 'out/nextflow_reports/execution_report.html'
}

trace {
   enabled = true
   file = 'out/nextflow_reports/execution_trace.txt'
}

dag {
   enabled = true
   file = 'out/nextflow_reports/pipeline_dag.svg'
}

min {
   enabled = false
}

docker {
   enabled = true
   runOptions = '-i -v /Users/zager:/Users/zager'
}
